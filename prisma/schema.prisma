generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Socio {
  id              Int             @id @default(autoincrement())
  numeroCuenta    String          @unique @map("numero_cuenta")
  nombres         String
  apellidos       String
  cedula          String          @unique
  edad            Int
  ahorros         Ahorro[]
  multas          Float           @default(0)
  fechaCreacion   DateTime        @default(now()) @map("fecha_creacion")
  aportes         Aporte[]
  participaciones Participacion[]
  rondasResponsable Ronda[] @relation("RondaResponsable")
  responsabilidadesSemana  ResponsableCobroSemana[]

  // ðŸ‘‡ NUEVO: relaciÃ³n inversa con PrestamoExpress
  prestamosExpress PrestamoExpress[]

  @@map("socios")
}
model Ronda {
  id              Int             @id @default(autoincrement())
  nombre          String
  montoAporte     Decimal         @db.Decimal(12, 2)
  activa          Boolean         @default(true)
  fechaInicio     DateTime        @map("fecha_inicio")
  fechaFin        DateTime?       @map("fecha_fin")
  semanaActual    Int             @default(1) @map("semana_actual")
  intervaloDiasCobro Int          @default(7) @map("intervalo_dias_cobro")
  aportes         Aporte[]
  participaciones Participacion[]
  ahorroObjetivoPorSocio Decimal  @db.Decimal(12,2) @default(0)
  responsableId   Int?            @map("responsable_id")
  responsable     Socio?          @relation("RondaResponsable", fields: [responsableId], references: [id])
  responsablesSemana       ResponsableCobroSemana[]
  ahorros         Ahorro[]  

  // ðŸ‘‡ NUEVO: relaciÃ³n inversa con PrestamoExpress
  prestamosExpress PrestamoExpress[]

  @@map("rondas")
}
model Participacion {
  id      Int     @id @default(autoincrement())
  rondaId Int     @map("ronda_id")
  socioId Int     @map("socio_id")
  orden   Int
  activo  Boolean @default(true)
  ronda   Ronda   @relation(fields: [rondaId], references: [id])
  socio   Socio   @relation(fields: [socioId], references: [id])

  @@unique([rondaId, socioId])
  @@map("participaciones")
}

model Aporte {
  id                Int      @id @default(autoincrement())
  rondaId           Int      @map("ronda_id")
  socioId           Int      @map("socio_id")
  semana            Int
  observaciones     String   @default("")
  monto             Decimal  @db.Decimal(12, 2)
  multa             Decimal  @default(0) @db.Decimal(12, 2)
  fecha             DateTime @default(now())
  ronda             Ronda    @relation(fields: [rondaId], references: [id])
  socio             Socio    @relation(fields: [socioId], references: [id])

  // ðŸ‘‡ FK opcional al prÃ©stamo express que cubriÃ³ este aporte
  prestamoExpressId Int?     @unique
  prestamoExpress   PrestamoExpress? @relation(fields: [prestamoExpressId], references: [id])

  @@unique([rondaId, socioId, semana])
  @@map("aportes")
}
model Ahorro { 
  id Int @id @default(autoincrement())
  rondaId Int @map("ronda_id")
  socioId Int @map("socio_id")
  semana Int 
  monto Decimal @db.Decimal(12, 2)
  observaciones       String  @default("")
  fecha DateTime @default(now())
  ronda Ronda @relation(fields: [rondaId], references: [id])
  socio Socio @relation(fields: [socioId], references: [id])
  @@unique([rondaId, socioId, semana]) 
  @@map("ahorros") 
}



model ResponsableCobroSemana {
  id        Int      @id @default(autoincrement())
  rondaId   Int      @map("ronda_id")
  semana    Int
  socioId   Int      @map("socio_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt      @map("updated_at")

  ronda     Ronda    @relation(fields: [rondaId], references: [id])
  socio     Socio    @relation(fields: [socioId], references: [id])

  @@unique([rondaId, semana])
  @@map("responsables_semana")
}

model PrestamoExpress {
  id            Int       @id @default(autoincrement())
  rondaId       Int
  socioId       Int
  semana        Int
  principal     Decimal   @db.Decimal(12,2)
  interes       Decimal   @db.Decimal(12,2)
  total         Decimal   @db.Decimal(12,2)
  estado        String    @default("PENDIENTE") // PENDIENTE | PAGADO | CANCELADO
  observaciones String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Relaciones hacia Ronda y Socio
  ronda Ronda @relation(fields: [rondaId], references: [id])
  socio Socio @relation(fields: [socioId], references: [id])

  // ðŸ‘‡ lado opuesto (1:1) del vÃ­nculo con Aporte
  aporte Aporte?

  // @@map("prestamos_express") // opcional si quieres nombre de tabla custom
}